/*
 * Copyright Â© 2017-2024  Kynetics, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

ext {
    versionFromGit = { prj ->
        def gitversion = "none"
        try {
            gitversion = grgit.describe(tags: true) ?: grgit.head().getAbbreviatedId(7)
        } catch (Exception ex) {
            logger.error(ex.toString())
        }
        return gitversion
    }

    differentVersions = subprojects.collectEntries {
        [versionFromGit(it), it]
    }

    firstVersion = differentVersions.keySet().first()
}


task showVersions {
    group 'uf'
    doLast {
        subprojects.each {
            println it.name + ": Building version " + versionFromGit(it)
        }
    }
}
